{"version":3,"sources":["api/todos.ts","api/users.ts","helpers.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","findUserById","users","find","user","getNewId","arr","ids","map","item","maxId","Math","max","Number","isFinite","UserInfo","className","href","TodoInfo","todo","TodoList","todos","App","usersFromServer","useState","todosFromServer","setTodos","selectedUserId","setSelectedUserId","newTodoTitle","setNewTodoTitle","isTitleError","setIsTitleError","isUserSelectError","setIsUserSelectError","todosWithUsers","getCurrentTodos","action","method","onSubmit","event","preventDefault","prevTodos","newTodo","trim","htmlFor","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.361d2ddf.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { Todo, InitialTodo } from './types/Todo';\nimport { User } from './types/User';\n\nexport function findUserById(users: User[], userId: number): User | null {\n  const foundUser = users.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport function getCurrentTodos(todos: InitialTodo[], users: User[]): Todo[] {\n  return todos.map(todo => ({\n    ...todo,\n    user: findUserById(users, todo.userId),\n  }));\n}\n\nexport const getNewId = (arr: { id: number }[]): number => {\n  const ids = arr.map((item) => item.id);\n  const maxId = Math.max(...ids);\n\n  return Number.isFinite(maxId)\n    ? maxId + 1\n    : 1;\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = (({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n});\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC <Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={`TodoInfo ${todo.completed\n      ? 'TodoInfo--completed'\n      : ''}`}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC <Props> = (({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <div key={todo.id}>\n        <TodoInfo todo={todo} />\n      </div>\n    ))}\n  </section>\n));\n","import './App.scss';\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { getCurrentTodos, getNewId } from './helpers';\n\nimport { InitialTodo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const users = usersFromServer;\n  const [todos, setTodos] = useState<InitialTodo[]>(todosFromServer);\n\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserSelectError, setIsUserSelectError] = useState(false);\n\n  const todosWithUsers = getCurrentTodos(todos, users);\n\n  const clearForm = () => {\n    setSelectedUserId(0);\n    setNewTodoTitle('');\n    setIsTitleError(false);\n    setIsUserSelectError(false);\n  };\n\n  const addTodo = ((event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (selectedUserId === 0 || newTodoTitle === '') {\n      setIsTitleError(newTodoTitle === '');\n      setIsUserSelectError(selectedUserId === 0);\n\n      return;\n    }\n\n    setTodos((prevTodos) => {\n      const newTodo = {\n        id: getNewId(prevTodos),\n        title: newTodoTitle.trim(),\n        userId: selectedUserId,\n        completed: false,\n      };\n\n      return [...prevTodos, newTodo];\n    });\n\n    clearForm();\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleTodo\">\n            {'Title: '}\n          </label>\n\n          <input\n            id=\"titleTodo\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTodoTitle}\n            onChange={((event) => {\n              setNewTodoTitle(event.target.value);\n              setIsTitleError(false);\n            })}\n          />\n\n          {isTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelector\">\n            {'User: '}\n          </label>\n          <select\n            id=\"userSelector\"\n            data-cy=\"userSelect\"\n            onChange={((event) => {\n              setIsUserSelectError(false);\n              setSelectedUserId(+event.target.value);\n            })}\n            value={selectedUserId}\n          >\n            <option value=\"0\">\n              Choose a user\n            </option>\n\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {`${user.name}`}\n              </option>\n            ))}\n          </select>\n\n          {isUserSelectError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosWithUsers} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}